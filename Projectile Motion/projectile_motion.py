# -*- coding: utf-8 -*-
"""Projectile_motion.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/103CA6fCK_th-CgyH1_5NFWJliMNFvfjY
"""

import numpy as np
import matplotlib.pyplot as plt

# Constants
g = 9.81  # Acceleration due to gravity (m/s^2)

def projectile_motion(v0, angle, dt=0.01):
    """Simulates 2D projectile motion."""
    theta = np.radians(angle)
    vx = v0 * np.cos(theta)
    vy = v0 * np.sin(theta)
    x, y = 0, 0

    x_vals, y_vals = [x], [y]

    while y >= 0:
        x += vx * dt
        y += vy * dt
        vy -= g * dt
        x_vals.append(x)
        y_vals.append(y)

    return x_vals, y_vals

# ----------------------------
# Part 1: Single trajectory (45°)
# ----------------------------
v0 = 20  # Initial speed in m/s
angle = 45  # Launch angle in degrees

x_vals, y_vals = projectile_motion(v0, angle)

plt.figure(figsize=(8, 5))
plt.plot(x_vals, y_vals, label=f'v0={v0} m/s, angle={angle}°')
plt.xlabel("Distance (m)")
plt.ylabel("Height (m)")
plt.title("Projectile Motion for 45°")
plt.legend()
plt.grid()
plt.show()

# ----------------------------
# Part 2: Multiple trajectories
# ----------------------------
# Angles from 10° to 80°, ensuring 45° is included
angles = sorted(set(np.linspace(10, 80, 10)) | {45})

plt.figure(figsize=(8, 5))
for angle in angles:
    x_vals, y_vals = projectile_motion(v0, angle)
    plt.plot(x_vals, y_vals, label=f'angle={angle:.0f}°')

plt.xlabel("Distance (m)")
plt.ylabel("Height (m)")
plt.title("Projectile Motion for Different Angles")
plt.legend()
plt.grid()
plt.show()

